package com.maritime.models;

import java.util.ArrayList;
import java.util.List;

public class TeacherModelExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table maritime.teacher
     *
     * @mbggenerated Mon Apr 17 23:42:39 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table maritime.teacher
     *
     * @mbggenerated Mon Apr 17 23:42:39 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table maritime.teacher
     *
     * @mbggenerated Mon Apr 17 23:42:39 CST 2017
     */
    protected java.util.List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maritime.teacher
     *
     * @mbggenerated Mon Apr 17 23:42:39 CST 2017
     */
    public TeacherModelExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maritime.teacher
     *
     * @mbggenerated Mon Apr 17 23:42:39 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maritime.teacher
     *
     * @mbggenerated Mon Apr 17 23:42:39 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maritime.teacher
     *
     * @mbggenerated Mon Apr 17 23:42:39 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maritime.teacher
     *
     * @mbggenerated Mon Apr 17 23:42:39 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maritime.teacher
     *
     * @mbggenerated Mon Apr 17 23:42:39 CST 2017
     */
    public java.util.List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maritime.teacher
     *
     * @mbggenerated Mon Apr 17 23:42:39 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maritime.teacher
     *
     * @mbggenerated Mon Apr 17 23:42:39 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maritime.teacher
     *
     * @mbggenerated Mon Apr 17 23:42:39 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maritime.teacher
     *
     * @mbggenerated Mon Apr 17 23:42:39 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maritime.teacher
     *
     * @mbggenerated Mon Apr 17 23:42:39 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table maritime.teacher
     *
     * @mbggenerated Mon Apr 17 23:42:39 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected java.util.List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public java.util.List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTidIsNull() {
            addCriterion("tid is null");
            return (Criteria) this;
        }

        public Criteria andTidIsNotNull() {
            addCriterion("tid is not null");
            return (Criteria) this;
        }

        public Criteria andTidEqualTo(Integer value) {
            addCriterion("tid =", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidNotEqualTo(Integer value) {
            addCriterion("tid <>", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidGreaterThan(Integer value) {
            addCriterion("tid >", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidGreaterThanOrEqualTo(Integer value) {
            addCriterion("tid >=", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidLessThan(Integer value) {
            addCriterion("tid <", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidLessThanOrEqualTo(Integer value) {
            addCriterion("tid <=", value, "tid");
            return (Criteria) this;
        }

        public Criteria andTidIn(java.util.List<java.lang.Integer> values) {
            addCriterion("tid in", values, "tid");
            return (Criteria) this;
        }

        public Criteria andTidNotIn(java.util.List<java.lang.Integer> values) {
            addCriterion("tid not in", values, "tid");
            return (Criteria) this;
        }

        public Criteria andTidBetween(Integer value1, Integer value2) {
            addCriterion("tid between", value1, value2, "tid");
            return (Criteria) this;
        }

        public Criteria andTidNotBetween(Integer value1, Integer value2) {
            addCriterion("tid not between", value1, value2, "tid");
            return (Criteria) this;
        }

        public Criteria andTnameIsNull() {
            addCriterion("tname is null");
            return (Criteria) this;
        }

        public Criteria andTnameIsNotNull() {
            addCriterion("tname is not null");
            return (Criteria) this;
        }

        public Criteria andTnameEqualTo(String value) {
            addCriterion("tname =", value, "tname");
            return (Criteria) this;
        }

        public Criteria andTnameNotEqualTo(String value) {
            addCriterion("tname <>", value, "tname");
            return (Criteria) this;
        }

        public Criteria andTnameGreaterThan(String value) {
            addCriterion("tname >", value, "tname");
            return (Criteria) this;
        }

        public Criteria andTnameGreaterThanOrEqualTo(String value) {
            addCriterion("tname >=", value, "tname");
            return (Criteria) this;
        }

        public Criteria andTnameLessThan(String value) {
            addCriterion("tname <", value, "tname");
            return (Criteria) this;
        }

        public Criteria andTnameLessThanOrEqualTo(String value) {
            addCriterion("tname <=", value, "tname");
            return (Criteria) this;
        }

        public Criteria andTnameLike(String value) {
            addCriterion("tname like", value, "tname");
            return (Criteria) this;
        }

        public Criteria andTnameNotLike(String value) {
            addCriterion("tname not like", value, "tname");
            return (Criteria) this;
        }

        public Criteria andTnameIn(java.util.List<java.lang.String> values) {
            addCriterion("tname in", values, "tname");
            return (Criteria) this;
        }

        public Criteria andTnameNotIn(java.util.List<java.lang.String> values) {
            addCriterion("tname not in", values, "tname");
            return (Criteria) this;
        }

        public Criteria andTnameBetween(String value1, String value2) {
            addCriterion("tname between", value1, value2, "tname");
            return (Criteria) this;
        }

        public Criteria andTnameNotBetween(String value1, String value2) {
            addCriterion("tname not between", value1, value2, "tname");
            return (Criteria) this;
        }

        public Criteria andTsexIsNull() {
            addCriterion("tsex is null");
            return (Criteria) this;
        }

        public Criteria andTsexIsNotNull() {
            addCriterion("tsex is not null");
            return (Criteria) this;
        }

        public Criteria andTsexEqualTo(String value) {
            addCriterion("tsex =", value, "tsex");
            return (Criteria) this;
        }

        public Criteria andTsexNotEqualTo(String value) {
            addCriterion("tsex <>", value, "tsex");
            return (Criteria) this;
        }

        public Criteria andTsexGreaterThan(String value) {
            addCriterion("tsex >", value, "tsex");
            return (Criteria) this;
        }

        public Criteria andTsexGreaterThanOrEqualTo(String value) {
            addCriterion("tsex >=", value, "tsex");
            return (Criteria) this;
        }

        public Criteria andTsexLessThan(String value) {
            addCriterion("tsex <", value, "tsex");
            return (Criteria) this;
        }

        public Criteria andTsexLessThanOrEqualTo(String value) {
            addCriterion("tsex <=", value, "tsex");
            return (Criteria) this;
        }

        public Criteria andTsexLike(String value) {
            addCriterion("tsex like", value, "tsex");
            return (Criteria) this;
        }

        public Criteria andTsexNotLike(String value) {
            addCriterion("tsex not like", value, "tsex");
            return (Criteria) this;
        }

        public Criteria andTsexIn(java.util.List<java.lang.String> values) {
            addCriterion("tsex in", values, "tsex");
            return (Criteria) this;
        }

        public Criteria andTsexNotIn(java.util.List<java.lang.String> values) {
            addCriterion("tsex not in", values, "tsex");
            return (Criteria) this;
        }

        public Criteria andTsexBetween(String value1, String value2) {
            addCriterion("tsex between", value1, value2, "tsex");
            return (Criteria) this;
        }

        public Criteria andTsexNotBetween(String value1, String value2) {
            addCriterion("tsex not between", value1, value2, "tsex");
            return (Criteria) this;
        }

        public Criteria andTnumberIsNull() {
            addCriterion("tnumber is null");
            return (Criteria) this;
        }

        public Criteria andTnumberIsNotNull() {
            addCriterion("tnumber is not null");
            return (Criteria) this;
        }

        public Criteria andTnumberEqualTo(Long value) {
            addCriterion("tnumber =", value, "tnumber");
            return (Criteria) this;
        }

        public Criteria andTnumberNotEqualTo(Long value) {
            addCriterion("tnumber <>", value, "tnumber");
            return (Criteria) this;
        }

        public Criteria andTnumberGreaterThan(Long value) {
            addCriterion("tnumber >", value, "tnumber");
            return (Criteria) this;
        }

        public Criteria andTnumberGreaterThanOrEqualTo(Long value) {
            addCriterion("tnumber >=", value, "tnumber");
            return (Criteria) this;
        }

        public Criteria andTnumberLessThan(Long value) {
            addCriterion("tnumber <", value, "tnumber");
            return (Criteria) this;
        }

        public Criteria andTnumberLessThanOrEqualTo(Long value) {
            addCriterion("tnumber <=", value, "tnumber");
            return (Criteria) this;
        }

        public Criteria andTnumberIn(java.util.List<java.lang.Long> values) {
            addCriterion("tnumber in", values, "tnumber");
            return (Criteria) this;
        }

        public Criteria andTnumberNotIn(java.util.List<java.lang.Long> values) {
            addCriterion("tnumber not in", values, "tnumber");
            return (Criteria) this;
        }

        public Criteria andTnumberBetween(Long value1, Long value2) {
            addCriterion("tnumber between", value1, value2, "tnumber");
            return (Criteria) this;
        }

        public Criteria andTnumberNotBetween(Long value1, Long value2) {
            addCriterion("tnumber not between", value1, value2, "tnumber");
            return (Criteria) this;
        }

        public Criteria andTpasswordIsNull() {
            addCriterion("tpassword is null");
            return (Criteria) this;
        }

        public Criteria andTpasswordIsNotNull() {
            addCriterion("tpassword is not null");
            return (Criteria) this;
        }

        public Criteria andTpasswordEqualTo(String value) {
            addCriterion("tpassword =", value, "tpassword");
            return (Criteria) this;
        }

        public Criteria andTpasswordNotEqualTo(String value) {
            addCriterion("tpassword <>", value, "tpassword");
            return (Criteria) this;
        }

        public Criteria andTpasswordGreaterThan(String value) {
            addCriterion("tpassword >", value, "tpassword");
            return (Criteria) this;
        }

        public Criteria andTpasswordGreaterThanOrEqualTo(String value) {
            addCriterion("tpassword >=", value, "tpassword");
            return (Criteria) this;
        }

        public Criteria andTpasswordLessThan(String value) {
            addCriterion("tpassword <", value, "tpassword");
            return (Criteria) this;
        }

        public Criteria andTpasswordLessThanOrEqualTo(String value) {
            addCriterion("tpassword <=", value, "tpassword");
            return (Criteria) this;
        }

        public Criteria andTpasswordLike(String value) {
            addCriterion("tpassword like", value, "tpassword");
            return (Criteria) this;
        }

        public Criteria andTpasswordNotLike(String value) {
            addCriterion("tpassword not like", value, "tpassword");
            return (Criteria) this;
        }

        public Criteria andTpasswordIn(java.util.List<java.lang.String> values) {
            addCriterion("tpassword in", values, "tpassword");
            return (Criteria) this;
        }

        public Criteria andTpasswordNotIn(java.util.List<java.lang.String> values) {
            addCriterion("tpassword not in", values, "tpassword");
            return (Criteria) this;
        }

        public Criteria andTpasswordBetween(String value1, String value2) {
            addCriterion("tpassword between", value1, value2, "tpassword");
            return (Criteria) this;
        }

        public Criteria andTpasswordNotBetween(String value1, String value2) {
            addCriterion("tpassword not between", value1, value2, "tpassword");
            return (Criteria) this;
        }

        public Criteria andIsActiveIsNull() {
            addCriterion("is_active is null");
            return (Criteria) this;
        }

        public Criteria andIsActiveIsNotNull() {
            addCriterion("is_active is not null");
            return (Criteria) this;
        }

        public Criteria andIsActiveEqualTo(Boolean value) {
            addCriterion("is_active =", value, "isActive");
            return (Criteria) this;
        }

        public Criteria andIsActiveNotEqualTo(Boolean value) {
            addCriterion("is_active <>", value, "isActive");
            return (Criteria) this;
        }

        public Criteria andIsActiveGreaterThan(Boolean value) {
            addCriterion("is_active >", value, "isActive");
            return (Criteria) this;
        }

        public Criteria andIsActiveGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_active >=", value, "isActive");
            return (Criteria) this;
        }

        public Criteria andIsActiveLessThan(Boolean value) {
            addCriterion("is_active <", value, "isActive");
            return (Criteria) this;
        }

        public Criteria andIsActiveLessThanOrEqualTo(Boolean value) {
            addCriterion("is_active <=", value, "isActive");
            return (Criteria) this;
        }

        public Criteria andIsActiveIn(java.util.List<java.lang.Boolean> values) {
            addCriterion("is_active in", values, "isActive");
            return (Criteria) this;
        }

        public Criteria andIsActiveNotIn(java.util.List<java.lang.Boolean> values) {
            addCriterion("is_active not in", values, "isActive");
            return (Criteria) this;
        }

        public Criteria andIsActiveBetween(Boolean value1, Boolean value2) {
            addCriterion("is_active between", value1, value2, "isActive");
            return (Criteria) this;
        }

        public Criteria andIsActiveNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_active not between", value1, value2, "isActive");
            return (Criteria) this;
        }

        public Criteria andTroleIsNull() {
            addCriterion("trole is null");
            return (Criteria) this;
        }

        public Criteria andTroleIsNotNull() {
            addCriterion("trole is not null");
            return (Criteria) this;
        }

        public Criteria andTroleEqualTo(Integer value) {
            addCriterion("trole =", value, "trole");
            return (Criteria) this;
        }

        public Criteria andTroleNotEqualTo(Integer value) {
            addCriterion("trole <>", value, "trole");
            return (Criteria) this;
        }

        public Criteria andTroleGreaterThan(Integer value) {
            addCriterion("trole >", value, "trole");
            return (Criteria) this;
        }

        public Criteria andTroleGreaterThanOrEqualTo(Integer value) {
            addCriterion("trole >=", value, "trole");
            return (Criteria) this;
        }

        public Criteria andTroleLessThan(Integer value) {
            addCriterion("trole <", value, "trole");
            return (Criteria) this;
        }

        public Criteria andTroleLessThanOrEqualTo(Integer value) {
            addCriterion("trole <=", value, "trole");
            return (Criteria) this;
        }

        public Criteria andTroleIn(java.util.List<java.lang.Integer> values) {
            addCriterion("trole in", values, "trole");
            return (Criteria) this;
        }

        public Criteria andTroleNotIn(java.util.List<java.lang.Integer> values) {
            addCriterion("trole not in", values, "trole");
            return (Criteria) this;
        }

        public Criteria andTroleBetween(Integer value1, Integer value2) {
            addCriterion("trole between", value1, value2, "trole");
            return (Criteria) this;
        }

        public Criteria andTroleNotBetween(Integer value1, Integer value2) {
            addCriterion("trole not between", value1, value2, "trole");
            return (Criteria) this;
        }

        public Criteria andTdescriptionIsNull() {
            addCriterion("tdescription is null");
            return (Criteria) this;
        }

        public Criteria andTdescriptionIsNotNull() {
            addCriterion("tdescription is not null");
            return (Criteria) this;
        }

        public Criteria andTdescriptionEqualTo(String value) {
            addCriterion("tdescription =", value, "tdescription");
            return (Criteria) this;
        }

        public Criteria andTdescriptionNotEqualTo(String value) {
            addCriterion("tdescription <>", value, "tdescription");
            return (Criteria) this;
        }

        public Criteria andTdescriptionGreaterThan(String value) {
            addCriterion("tdescription >", value, "tdescription");
            return (Criteria) this;
        }

        public Criteria andTdescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("tdescription >=", value, "tdescription");
            return (Criteria) this;
        }

        public Criteria andTdescriptionLessThan(String value) {
            addCriterion("tdescription <", value, "tdescription");
            return (Criteria) this;
        }

        public Criteria andTdescriptionLessThanOrEqualTo(String value) {
            addCriterion("tdescription <=", value, "tdescription");
            return (Criteria) this;
        }

        public Criteria andTdescriptionLike(String value) {
            addCriterion("tdescription like", value, "tdescription");
            return (Criteria) this;
        }

        public Criteria andTdescriptionNotLike(String value) {
            addCriterion("tdescription not like", value, "tdescription");
            return (Criteria) this;
        }

        public Criteria andTdescriptionIn(java.util.List<java.lang.String> values) {
            addCriterion("tdescription in", values, "tdescription");
            return (Criteria) this;
        }

        public Criteria andTdescriptionNotIn(java.util.List<java.lang.String> values) {
            addCriterion("tdescription not in", values, "tdescription");
            return (Criteria) this;
        }

        public Criteria andTdescriptionBetween(String value1, String value2) {
            addCriterion("tdescription between", value1, value2, "tdescription");
            return (Criteria) this;
        }

        public Criteria andTdescriptionNotBetween(String value1, String value2) {
            addCriterion("tdescription not between", value1, value2, "tdescription");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table maritime.teacher
     *
     * @mbggenerated do_not_delete_during_merge Mon Apr 17 23:42:39 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table maritime.teacher
     *
     * @mbggenerated Mon Apr 17 23:42:39 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}